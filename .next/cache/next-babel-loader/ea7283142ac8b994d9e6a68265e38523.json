{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport App from 'next/app';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from '../styles/globals';\nimport { theme } from '../config';\nimport { proxy } from '../package.json';\naxios.defaults.baseURL = proxy;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.touchable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(GlobalStyles, null), __jsx(Component, pageProps));\n    }\n  }, {\n    key: \"touchable\",\n    value: function touchable() {\n      var typedWindow = window || null;\n      var touchsupport = 'ontouchstart' in typedWindow || typedWindow.navigator.maxTouchPoints > 0 || typedWindow.navigator.msMaxTouchPoints > 0;\n      var touchClass = touchsupport ? 'touch' : 'non-touch';\n\n      if (document.documentElement) {\n        document.documentElement.classList.add(touchClass);\n      }\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}