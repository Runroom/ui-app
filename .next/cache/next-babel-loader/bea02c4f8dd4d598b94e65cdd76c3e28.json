{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Jose/Sites/runroom-ui-app/components/Iframe/index.js\";\n\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { proxy } from '../../package.json';\nimport Iframe from './styles';\n\nvar Code = function Code(_ref) {\n  var component = _ref.component;\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isError = _useState2[0],\n      setIsError = _useState2[1];\n\n  var Loader = function Loader() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 24\n      }\n    }, \"Loading \", component, \".twig...\");\n  };\n\n  var Error = function Error() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 23\n      }\n    }, \"Error \", component, \".twig!\");\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"/.netlify/functions/server/components/\".concat(component)));\n\n            case 3:\n              apiRes = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              setIsError(true);\n\n            case 9:\n              _context.prev = 9;\n              setIsLoading(false);\n              return _context.finish(9);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6, 9, 12]], Promise);\n    })();\n  }, []);\n  return isLoading ? __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }) : isError ? __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }) : __jsx(Iframe, {\n    src: \"\".concat(proxy[\"development\"], \"/\").concat(component, \".html\"),\n    frameBorder: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default Code;","map":{"version":3,"sources":["/Users/Jose/Sites/runroom-ui-app/components/Iframe/index.js"],"names":["axios","React","useEffect","useState","proxy","Iframe","Code","component","isLoading","setIsLoading","isError","setIsError","Loader","Error","get","apiRes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACIJ,QAAQ,CAAC,IAAD,CADZ;AAAA,MACvBK,SADuB;AAAA,MACZC,YADY;;AAAA,mBAEAN,QAAQ,CAAC,KAAD,CAFR;AAAA,MAEvBO,OAFuB;AAAA,MAEdC,UAFc;;AAG9B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcL,SAAd,aAAN;AAAA,GAAf;;AACA,MAAMM,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYN,SAAZ,WAAN;AAAA,GAAd;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEkBF,KAAK,CAACc,GAAN,iDAAmDP,SAAnD,EAFlB;;AAAA;AAEGQ,cAAAA,MAFH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIGJ,cAAAA,UAAU,CAAC,IAAD,CAAV;;AAJH;AAAA;AAMGF,cAAAA,YAAY,CAAC,KAAD,CAAZ;AANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOD,SAAS,GACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAEZE,OAAO,GAAG,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACP,MAAC,MAAD;AAAQ,IAAA,GAAG,YAAKN,KAAK,eAAV,cAAoCG,SAApC,UAAX;AAAiE,IAAA,WAAW,EAAC,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAKD,CAvBD;;AAwBA,eAAeD,IAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nimport { proxy } from '../../package.json';\nimport Iframe from './styles';\n\nconst Code = ({ component }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const Loader = () => <div>Loading {component}.twig...</div>;\n  const Error = () => <div>Error {component}.twig!</div>;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        apiRes = await axios.get(`/.netlify/functions/server/components/${component}`);\n      } catch (err) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return isLoading ? (\n    <Loader />\n  ) : isError ? <Error /> : (\n      <Iframe src={`${proxy[process.env.NODE_ENV]}/${component}.html`} frameBorder='0'></Iframe>\n    );\n};\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}