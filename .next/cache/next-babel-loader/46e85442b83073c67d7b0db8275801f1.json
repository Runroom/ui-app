{"ast":null,"code":"var __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { proxy } from '../../package.json';\nimport Iframe from './styles';\n\nconst Code = ({\n  component\n}) => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n\n  const Loader = () => __jsx(\"div\", null, \"Loading \", component, \".twig...\");\n\n  const Error = () => __jsx(\"div\", null, \"Error \", component, \".twig!\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await axios.get(`/.netlify/functions/server/components/${component}`);\n      } catch (err) {\n        console.error(err);\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n  return isLoading ? __jsx(Loader, null) : isError ? __jsx(Error, null) : __jsx(Iframe, {\n    src: `${proxy[\"production\"]}/${component}.html`,\n    frameBorder: \"0\"\n  });\n};\n\nexport default Code;","map":null,"metadata":{},"sourceType":"module"}