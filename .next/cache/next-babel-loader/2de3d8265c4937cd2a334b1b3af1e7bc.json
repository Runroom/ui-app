{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { css } from 'styled-components';\nimport { space } from './rhythm';\n\nvar hover = function hover() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return css([\"&:hover{html.non-touch &:hover{\", \";}}\"], css.call.apply(css, [null].concat(args)));\n};\n\nvar hexToRgb = function hexToRgb(hex) {\n  if (hex[0] === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length === 3) {\n    var hr = hex[0];\n    var hg = hex[1];\n    var hb = hex[2];\n    return hexToRgb(\"\".concat(hr).concat(hr).concat(hg).concat(hg).concat(hb).concat(hb));\n  }\n\n  var _map$map = [0, 2, 4].map(function (offset) {\n    return hex.substring(offset, offset + 2);\n  }).map(function (hexCh) {\n    return parseInt(hexCh, 16);\n  }),\n      _map$map2 = _slicedToArray(_map$map, 3),\n      r = _map$map2[0],\n      g = _map$map2[1],\n      b = _map$map2[2];\n\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n};\n\nvar rgbToHex = function rgbToHex(r, g, b) {\n  return [r, g, b].map(function (decCh) {\n    return Math.max(0, Math.min(255, decCh)).toString(16);\n  }).map(function (hexCh) {\n    return hexCh.length === 1 ? \"0\".concat(hexCh) : hexCh;\n  }).join('');\n};\n\nvar getRatio = function getRatio(originalWidth, originalHeight) {\n  var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var finalHeight;\n  var finalWidth;\n\n  if (width > 0) {\n    finalHeight = Math.ceil(width / originalWidth * originalHeight) + 'px';\n    finalWidth = \"\".concat(width, \"px\");\n  } else {\n    finalHeight = \"\".concat(height, \"px\");\n    finalWidth = Math.ceil(height / originalHeight * originalWidth) + 'px';\n  }\n\n  return \"\\n    height: \".concat(finalHeight, \";\\n    width: \").concat(finalWidth, \";\\n  \");\n};\n\nvar columns = function columns(number) {\n  var spaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return \"\\n  width: calc((100% - \".concat(space(spaces * (number - 1)), \") / \").concat(number, \");\\n\\n  &:nth-child(n) { margin-right: \").concat(space(spaces), \"; }\\n  &:nth-child(\").concat(number, \"n) { margin-right: 0; }\\n\");\n};\n\nexport { columns, getRatio, hexToRgb, hover, rgbToHex };","map":{"version":3,"sources":["/Users/Jose/Sites/runroom-ui-app/styles/helpers.js"],"names":["css","space","hover","args","call","hexToRgb","hex","substr","length","hr","hg","hb","map","offset","substring","hexCh","parseInt","r","g","b","rgbToHex","decCh","Math","max","min","toString","join","getRatio","originalWidth","originalHeight","width","height","finalHeight","finalWidth","ceil","columns","number","spaces"],"mappings":"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","sourcesContent":["import { css } from 'styled-components';\n\nimport { space } from './rhythm';\n\nconst hover = (...args) => css`\n  &:hover {\n    html.non-touch &:hover {\n      ${css.call(null, ...args)};\n    }\n  }\n`;\n\nconst hexToRgb = hex => {\n  if (hex[0] === '#') {\n    hex = hex.substr(1);\n  }\n  if (hex.length === 3) {\n    const hr = hex[0];\n    const hg = hex[1];\n    const hb = hex[2];\n\n    return hexToRgb(`${hr}${hr}${hg}${hg}${hb}${hb}`);\n  }\n\n  const [r, g, b] = [0, 2, 4]\n    .map(offset => hex.substring(offset, offset + 2))\n    .map(hexCh => parseInt(hexCh, 16));\n\n  return { r, g, b };\n};\n\nconst rgbToHex = (r, g, b) => {\n  return [r, g, b]\n    .map(decCh => Math.max(0, Math.min(255, decCh)).toString(16))\n    .map(hexCh => (hexCh.length === 1 ? `0${hexCh}` : hexCh))\n    .join('');\n};\n\nconst getRatio = (\n  originalWidth,\n  originalHeight,\n  width = 0,\n  height = 0\n) => {\n  let finalHeight;\n  let finalWidth;\n\n  if (width > 0) {\n    finalHeight = Math.ceil((width / originalWidth) * originalHeight) + 'px';\n    finalWidth = `${width}px`;\n  } else {\n    finalHeight = `${height}px`;\n    finalWidth = Math.ceil((height / originalHeight) * originalWidth) + 'px';\n  }\n  return `\n    height: ${finalHeight};\n    width: ${finalWidth};\n  `;\n};\n\nconst columns = (number, spaces = 1) => `\n  width: calc((100% - ${space(spaces * (number - 1))}) / ${number});\n\n  &:nth-child(n) { margin-right: ${space(spaces)}; }\n  &:nth-child(${number}n) { margin-right: 0; }\n`;\n\nexport { columns, getRatio, hexToRgb, hover, rgbToHex };\n"]},"metadata":{},"sourceType":"module"}