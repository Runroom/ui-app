{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/italodr/Sites/runroom_ui_app/components/Iframe/index.js\";\n\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { proxy } from '../../package.json';\nimport Iframe from './styles';\n\nvar Code = function Code(_ref) {\n  var component = _ref.component;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var Loader = function Loader() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 24\n      }\n    }, \"Loading \", component, \".twig...\");\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(component);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"/api/ui/\".concat(component)));\n\n            case 3:\n              setIsLoading(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return isLoading ? __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }) : __jsx(Iframe, {\n    src: \"\".concat(proxy, \"/\").concat(component, \".html\"),\n    frameBorder: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Code;","map":{"version":3,"sources":["/Users/italodr/Sites/runroom_ui_app/components/Iframe/index.js"],"names":["axios","React","useEffect","useState","proxy","Iframe","Code","component","isLoading","setIsLoading","Loader","console","log","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACIJ,QAAQ,CAAC,KAAD,CADZ;AAAA,MACvBK,SADuB;AAAA,MACZC,YADY;;AAE9B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcH,SAAd,aAAN;AAAA,GAAf;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AACCE,cAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AADD;AAAA,+CAEOP,KAAK,CAACa,GAAN,mBAAqBN,SAArB,EAFP;;AAAA;AAGCE,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOD,SAAS,GACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAGd,MAAC,MAAD;AAAQ,IAAA,GAAG,YAAKJ,KAAL,cAAcG,SAAd,UAAX;AAA2C,IAAA,WAAW,EAAC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAKD,CAlBD;;AAmBA,eAAeD,IAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nimport { proxy } from '../../package.json';\nimport Iframe from './styles';\n\nconst Code = ({ component }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const Loader = () => <div>Loading {component}.twig...</div>;\n\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      console.log(component);\n      await axios.get(`/api/ui/${component}`);\n      setIsLoading(false);\n    })();\n  }, []);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Iframe src={`${proxy}/${component}.html`} frameBorder='0'></Iframe>\n  );\n};\nexport default Code;\n"]},"metadata":{},"sourceType":"module"}