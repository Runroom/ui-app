{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Iframe from './styles';\n\nvar Code = function Code(_ref) {\n  var component = _ref.component;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var Loader = function Loader() {\n    return __jsx(\"div\", null, \"Loading \", component, \".twig...\");\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(component);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"/api/ui/\".concat(component)));\n\n            case 3:\n              setIsLoading(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return isLoading ? __jsx(Loader, null) : __jsx(Iframe, {\n    src: \"http://localhost:5000/\".concat(component, \".html\"),\n    frameBorder: \"0\"\n  });\n};\n\nexport default Code;","map":null,"metadata":{},"sourceType":"module"}